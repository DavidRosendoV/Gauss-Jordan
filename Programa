
package GaussJordan;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class MetodoDeGaussJordan extends javax.swing.JFrame {

    int f, c;

    DefaultTableModel modelo = new DefaultTableModel();
    Boolean ban = false;

    public MetodoDeGaussJordan() {
        initComponents();

        this.setLocationRelativeTo(null);
    }

    
    public double[] cargarMatriz(double m[][], double r[]) {


        for (int i = 0; i <= r.length - 1; i++) {
            double d, c = 0;
            d = m[i][i];
            area_de_texto.append(Double.toString(d / 2) + "*fila" + (i + 1) + "\n");
            for (int s = 0; s <= r.length - 1; s++) {
                m[i][s] = ((m[i][s]) / d);
            }
            r[i] = ((r[i]) / d);

         
            for (int j = 0; j < r.length; j++) {

                for (int k = 0; k < r.length; k++) {
                    area_de_texto.append(Double.toString(m[j][k]) + "\t");
                }
                area_de_texto.append("|\t" + Double.toString(r[j]) + "\n");
            }
            area_de_texto.append("\n\n");

            for (int x = 0; x <= r.length - 1; x++) {
                if (i != x) {
                    c = m[x][i];
                    area_de_texto.append("-" + Double.toString(c) + " * fila" + (i + 1) + "+ fila" + (x + 1) + "\n");
                    for (int y = 0; y <= r.length - 1; y++) {
                        m[x][y] = m[x][y] - c * m[i][y];

                    }
                    r[x] = r[x] - c * r[i];

                   
                    for (int j = 0; j < r.length; j++) {

                        for (int k = 0; k < r.length; k++) {
                            area_de_texto.append(Double.toString(m[j][k]) + "\t");
                        }
                        area_de_texto.append("|\t" + Double.toString(r[j]) + "\n");
                    }
                    area_de_texto.append("\n\n");

                }
            }

        }
        return r;

    }
private void jButtoncargar_matrizActionPerformed(java.awt.event.ActionEvent evt) {                                                     
      
        try {
          
            f = Integer.parseInt(jTextFieldNumeroDeIncognitas.getText());
            c = f + 1;

          
            Object col[] = new Object[c];
            for (int j = 0; j < c; j++) {
                if (j < c - 1) {
                    col[j] = "X" + (j + 1);
                } else {
                    col[j] = "d";
                }
            }
            modelo = new DefaultTableModel(col, f);
            jTable1.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "INGRESO ERRONEO", "MENSAJE", JOptionPane.PLAIN_MESSAGE);
        }
    }
private void jButtoncargar_matriz2ActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        area_de_texto.setText("");
    }  
    private void jButtoncargar_matriz1ActionPerformed(java.awt.event.ActionEvent evt) {                                                      
       
        try {

            int n = Integer.parseInt(jTextFieldNumeroDeIncognitas.getText());

            double m[][] = new double[n][n];
            double r[] = new double[n];

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    m[i][j] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, j)));
                }
                r[i] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, n)));
            }

            double solucion[] = new double[n];
            r = this.cargarMatriz(m, r);


            for (int i = 0; i < n; i++) {
                area_de_texto.append("x" + (i + 1) + " = " + r[i] + "\n");
            }

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error ingreso de datos \n"
                    + "NOTA: verifique que no haya casillas seleccionadas ni vacias\n"
                    + " tambiÃ©n verifique que el ingreso de tados sea correctos");
        }
    } 
   private void jTextFieldNumeroDeIncognitasActionPerformed(java.awt.event.ActionEvent evt) {                                                             
        // TODO add your handling code here:
    }                                                            

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        System.exit(0);
    } 
 public static void main(String args[]) {
        /* Set the Nimbus look and feel */
java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MetodoDeGaussJordan().setVisible(true);
            }
        });
    }


//fin
